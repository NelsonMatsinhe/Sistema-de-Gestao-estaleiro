/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.FuncionarioDAO;
import controller.LoteProducaoDAO;
import controller.MaquinaDAO;
import controller.MaterialDAO;
import controller.ProducaoDAO;
import controller.ProdutoDAO;
import java.awt.Color;
import java.util.ArrayList;
import java.util.List;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.border.Border;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;
import model.Funcionario;
import model.ItemMaterial;
import model.LoteProducao;
import model.Maquina;
import model.Material;
import model.Producao;
import model.Produto;
import model.tabelas.LoteProducaoProducaoTableModel;
import model.tabelas.LoteProducaoTableModel;
import model.tabelas.ProducaoTableModel;

//import model.Produto;
/**
 * class tela de registros das produto
 *
 * @author Nelson Matsinhe
 */
public class TelaProducao extends javax.swing.JInternalFrame {

    /**
     * Creates new form Produto
     */
    //GenericDAO prod = new GenericDAO<>(Produto.class);
    public TelaProducao() {
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI ui = (BasicInternalFrameUI) this.getUI();
        ui.setNorthPane(null);
        habilitarFormulario(false);
        carregarGrade();
        configurarListeners();
        inicializarTabela();

        // Botão Novo habilita o formulário
        btNovo.addActionListener(e -> habilitarFormulario(true));

        // Ação do botão Salvar
        btSalvar.addActionListener(e -> {
            if (validarFormulario()) {
                //    btEditarActionPerformed();
            }
        });

        rbtAlocar.addActionListener(e -> habilitarSalvar());
        rbtdesalocar.addActionListener(e -> habilitarSalvar());

        TbProducao.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                selectRegistryTable();
            }
        });

    }
    /**
     *
     * as cores da campos
     */
    Color d = new Color(255, 0, 51);
    Color f = new Color(219, 220, 252);

    ProducaoDAO producaoDAO = new ProducaoDAO();
    MaquinaDAO maquinaDAO = new MaquinaDAO();
    FuncionarioDAO funcionarioDAO = new FuncionarioDAO();
    ProdutoDAO produtoDAO = new ProdutoDAO();
    MaterialDAO materialDAO = new MaterialDAO();
    LoteProducaoDAO LoteProducaoDAO=new LoteProducaoDAO();
    // Na sua tela de produção, adicione uma lista para controlar os materiais
    private List<ItemMaterial> itensMaterial = new ArrayList<>();
    private DefaultTableModel tmItemMaterial;
    private int codigoAtual = 1; // Para gerar códigos únicos

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        estadoGroup = new javax.swing.ButtonGroup();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        txtID = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        btCancelar = new javax.swing.JButton();
        btNovo = new javax.swing.JButton();
        btSalvar = new javax.swing.JButton();
        btEditar = new javax.swing.JButton();
        btExcluir = new javax.swing.JButton();
        lblMessagem = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        ftfProduto = new javax.swing.JFormattedTextField();
        btnUsuario = new javax.swing.JButton();
        ftfFuncionario = new javax.swing.JFormattedTextField();
        btnUsuario1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        ftfMaquina = new javax.swing.JFormattedTextField();
        btnUsuario2 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        rbtdesalocar = new javax.swing.JRadioButton();
        rbtAlocar = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        ftfMaterial = new javax.swing.JFormattedTextField();
        jLabel10 = new javax.swing.JLabel();
        btAdicionarItem1 = new javax.swing.JButton();
        btRemoverItem1 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        txtQuantidadeProduzida = new javax.swing.JSpinner();
        spQuantidadeMaterial = new javax.swing.JSpinner();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbItemMaterial = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        TbProducao = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 102, 102));
        setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel6.setBackground(new java.awt.Color(51, 102, 0));
        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel6.setPreferredSize(new java.awt.Dimension(930, 499));

        txtID.setPreferredSize(new java.awt.Dimension(300, 30));
        txtID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("ID:");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));

        jPanel2.setPreferredSize(new java.awt.Dimension(100, 245));

        btCancelar.setText("Cancelar");
        btCancelar.setFocusable(false);
        btCancelar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btCancelar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btCancelar.setMargin(new java.awt.Insets(2, 8, 2, 8));
        btCancelar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelarActionPerformed(evt);
            }
        });

        btNovo.setText("Novo");
        btNovo.setFocusable(false);
        btNovo.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btNovo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btNovo.setMargin(new java.awt.Insets(2, 8, 2, 8));
        btNovo.setPreferredSize(new java.awt.Dimension(64, 22));
        btNovo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNovoActionPerformed(evt);
            }
        });

        btSalvar.setText("Salvar");
        btSalvar.setFocusable(false);
        btSalvar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btSalvar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btSalvar.setMargin(new java.awt.Insets(2, 8, 2, 8));
        btSalvar.setPreferredSize(new java.awt.Dimension(64, 22));
        btSalvar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalvarActionPerformed(evt);
            }
        });

        btEditar.setText("Editar");
        btEditar.setFocusable(false);
        btEditar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btEditar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btEditar.setMargin(new java.awt.Insets(2, 8, 2, 8));
        btEditar.setPreferredSize(new java.awt.Dimension(64, 22));
        btEditar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEditarActionPerformed(evt);
            }
        });

        btExcluir.setText("Excluir");
        btExcluir.setFocusable(false);
        btExcluir.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btExcluir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btExcluir.setMargin(new java.awt.Insets(2, 8, 2, 8));
        btExcluir.setPreferredSize(new java.awt.Dimension(64, 22));
        btExcluir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExcluirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(btCancelar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Produto:");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Maquina:");

        ftfProduto.setEditable(false);
        ftfProduto.setColumns(25);
        ftfProduto.setPreferredSize(new java.awt.Dimension(300, 30));

        btnUsuario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/icons8-plus-29.png"))); // NOI18N
        btnUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUsuarioActionPerformed(evt);
            }
        });

        ftfFuncionario.setEditable(false);
        ftfFuncionario.setColumns(25);
        ftfFuncionario.setPreferredSize(new java.awt.Dimension(300, 30));

        btnUsuario1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/icons8-plus-29.png"))); // NOI18N
        btnUsuario1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUsuario1ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Funcionario:");

        ftfMaquina.setEditable(false);
        ftfMaquina.setColumns(25);
        ftfMaquina.setPreferredSize(new java.awt.Dimension(300, 30));

        btnUsuario2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/icons8-plus-29.png"))); // NOI18N
        btnUsuario2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUsuario2ActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("  Quant Material:");

        rbtdesalocar.setBackground(new java.awt.Color(51, 102, 0));
        estadoGroup.add(rbtdesalocar);
        rbtdesalocar.setForeground(new java.awt.Color(255, 255, 255));
        rbtdesalocar.setText("Disalocar");
        rbtdesalocar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtdesalocarActionPerformed(evt);
            }
        });

        rbtAlocar.setBackground(new java.awt.Color(51, 102, 0));
        estadoGroup.add(rbtAlocar);
        rbtAlocar.setForeground(new java.awt.Color(255, 255, 255));
        rbtAlocar.setText("Alocar");
        rbtAlocar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtAlocarActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Alocar:");

        ftfMaterial.setEditable(false);
        ftfMaterial.setColumns(25);
        ftfMaterial.setPreferredSize(new java.awt.Dimension(300, 30));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Q Produzida:");

        btAdicionarItem1.setToolTipText("Adicionar item");
        btAdicionarItem1.setPreferredSize(new java.awt.Dimension(35, 30));
        btAdicionarItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAdicionarItem1ActionPerformed(evt);
            }
        });

        btRemoverItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/icons8-menos-16.png"))); // NOI18N
        btRemoverItem1.setToolTipText("Remover item");
        btRemoverItem1.setPreferredSize(new java.awt.Dimension(35, 30));
        btRemoverItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRemoverItem1ActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Material:");

        txtQuantidadeProduzida.setPreferredSize(new java.awt.Dimension(300, 30));

        spQuantidadeMaterial.setPreferredSize(new java.awt.Dimension(250, 26));

        tbItemMaterial.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tbItemMaterial.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbItemMaterialMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbItemMaterial);

        TbProducao.setModel(new LoteProducaoProducaoTableModel());
        TbProducao.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TbProducaoMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(TbProducao);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(62, 62, 62)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel3)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(jLabel2))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addComponent(jLabel5)))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ftfFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ftfMaquina, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(rbtAlocar, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(rbtdesalocar)))
                        .addGap(12, 12, 12)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnUsuario1)
                            .addComponent(btnUsuario2))
                        .addGap(42, 42, 42)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(508, 508, 508)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(ftfProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(105, 105, 105)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(ftfMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(btnUsuario))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(154, 154, 154)
                        .addComponent(lblMessagem, javax.swing.GroupLayout.PREFERRED_SIZE, 590, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(txtQuantidadeProduzida, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(53, 53, 53)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addGap(118, 118, 118)
                                        .addComponent(spQuantidadeMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(12, 12, 12)
                                .addComponent(btAdicionarItem1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12)
                                .addComponent(btRemoverItem1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 828, Short.MAX_VALUE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel1)
                        .addGap(22, 22, 22)
                        .addComponent(jLabel3)
                        .addGap(25, 25, 25)
                        .addComponent(jLabel2)
                        .addGap(11, 11, 11)
                        .addComponent(jLabel5))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)
                        .addComponent(ftfFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(ftfMaquina, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(rbtAlocar))
                            .addComponent(rbtdesalocar)))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(btnUsuario1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)
                        .addComponent(btnUsuario2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addComponent(jLabel6)
                .addGap(6, 6, 6)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jLabel7))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(ftfProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel11))
                    .addComponent(ftfMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btAdicionarItem1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btRemoverItem1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(txtQuantidadeProduzida, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(spQuantidadeMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(jLabel9)))))
                .addGap(6, 6, 6)
                .addComponent(lblMessagem, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel1.setBackground(new java.awt.Color(51, 102, 0));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setPreferredSize(new java.awt.Dimension(627, 86));

        jLabel8.setBackground(new java.awt.Color(102, 102, 102));
        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Registro de Produção");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(310, 310, 310)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, 944, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 944, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setBounds(0, 0, 960, 620);
    }// </editor-fold>//GEN-END:initComponents

    private void txtIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIDActionPerformed

    private void btNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNovoActionPerformed

    }//GEN-LAST:event_btNovoActionPerformed

    private void btSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvarActionPerformed
        if (validarFormulario()) {
            try {
                Producao producao = new Producao();

                // Obter funcionário selecionado
                Funcionario funcionarioSelecionado = (Funcionario) ftfFuncionario.getValue();
                if (funcionarioSelecionado == null) {
                    throw new Exception("Selecione um funcionário");
                }

                // Obter máquina selecionada
                Maquina maquinaSelecionada = (Maquina) ftfMaquina.getValue();
                if (maquinaSelecionada == null) {
                    throw new Exception("Selecione uma máquina");
                }

                // Verificar se a máquina está alocada para o funcionário correto
                if (!maquinaSelecionada.isDisponivel()
                        && funcionarioSelecionado.getMaquinaAlocada() != maquinaSelecionada) {
                    throw new Exception("Máquina não está alocada para este funcionário");
                }

                // Verificar se a máquina precisa ser alocada
                if (maquinaSelecionada.isDisponivel()) {
                    maquinaSelecionada.alocar(funcionarioSelecionado);
                    funcionarioSelecionado.setMaquinaAlocada(maquinaSelecionada);
                    maquinaDAO.atualizar(maquinaSelecionada);
                    funcionarioDAO.atualizar(funcionarioSelecionado);
                }

                // Obter produto e verificar
                 Produto produto = maquinaSelecionada.getProduto();
                ftfProduto.setValue(produto);

                // Processar quantidades
                int quantidadeProduzida;
                int quantidadeMaterial;

                // Para txtQuantidadeProduzida
                Object quantidadeValue = txtQuantidadeProduzida.getValue();
                if (quantidadeValue instanceof Integer) {
                    quantidadeProduzida = (Integer) quantidadeValue;
                } else if (quantidadeValue instanceof String) {
                    quantidadeProduzida = Integer.parseInt((String) quantidadeValue);
                } else {
                    throw new Exception("Quantidade produzida inválida");
                }

                // Para spQuantidadeMaterial
                Object materialValue = spQuantidadeMaterial.getValue();
                if (materialValue instanceof Integer) {
                    quantidadeMaterial = (Integer) materialValue;
                } else if (materialValue instanceof String) {
                    quantidadeMaterial = Integer.parseInt((String) materialValue);
                } else {
                    throw new Exception("Quantidade de material inválida");
                }

                // Configurar a produção básica
                producao.setProduto(produto);
               // producao.setDiasParaCura(produto.getTempoCura());
                producao.setMaquina(maquinaSelecionada);

                // Criar lista de materiais utilizados
                List<Material> materiaisUtilizados = new ArrayList<>();
                for (ItemMaterial item : itensMaterial) {
                    Material material = item.getMaterial();
                    // Verificar se há estoque suficiente
                    if (material.getQuantidade() < item.getQuantidade()) {
                        throw new Exception("Estoque insuficiente para o material: " + material.getNome());
                    }
                    materiaisUtilizados.add(material);
                }

                // Registrar a produção com funcionário, quantidade e materiais
                producao.registrarProducao(funcionarioSelecionado, quantidadeProduzida, materiaisUtilizados);

                // Criar lote inicial
                LoteProducao loteInicial = producao.criarLote(quantidadeProduzida);

                // Atualizar materiais no banco
                for (Material material : materiaisUtilizados) {
                    materialDAO.atualizar(material);
                }

                // Salvar a produção
                producaoDAO.salvar(producao);

                // Atualizar o produto no banco
                produtoDAO.atualizar(produto);

//                JOptionPane.showMessageDialog(this,
//                        "Produção registrada com sucesso.\nLote criado: " + loteInicial.getNumeroLote());
//                limpaFormulario();
                carregarGrade();

            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this,
                        "Erro ao salvar a produção.\n" + ex.getMessage(),
                        "Erro",
                        JOptionPane.ERROR_MESSAGE);
            }

        }
    }//GEN-LAST:event_btSalvarActionPerformed

    private void btExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcluirActionPerformed

        if (!txtID.getText().isEmpty()) {
            Long id = Long.parseLong(txtID.getText());

            int confirmacao = JOptionPane.showConfirmDialog(this, "Tem certeza que deseja excluir esta produção?", "Confirmação", JOptionPane.YES_NO_OPTION);

            if (confirmacao == JOptionPane.YES_OPTION) {
                try {
                    producaoDAO.remover(id);
                    JOptionPane.showMessageDialog(this, "Produção excluída com sucesso.");
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(this, "Erro ao excluir a produção.\n" + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
                }

                carregarGrade();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Selecione uma produção para excluir.");
        }

    }//GEN-LAST:event_btExcluirActionPerformed

    private void btCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelarActionPerformed
        habilitarFormulario(false);
    }//GEN-LAST:event_btCancelarActionPerformed

    private void btEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEditarActionPerformed
//        if (validarFormulario()) {
//            Long id;
//            try {
//                id = Long.parseLong(txtID.getText());
//            } catch (NumberFormatException e) {
//                JOptionPane.showMessageDialog(this, "ID inválido.", "Erro", JOptionPane.ERROR_MESSAGE);
//                return; // Retorna se o ID não for válido
//            }
//
//                Producao producao = producaoDAO.buscarPorId(id);
//                // Obter funcionário selecionado
//                Funcionario funcionarioSelecionado = (Funcionario) ftfFuncionario.getValue();
//                if (funcionarioSelecionado == null) {
//                    throw new Exception("Selecione um funcionário");
//                }
//                // Obter máquina selecionada
//                Maquina maquinaSelecionada = (Maquina) ftfMaquina.getValue();
//                if (maquinaSelecionada == null) {
//                    throw new Exception("Selecione uma máquina");
//                }
//                // Obter produto e verificar
//                Produto produto = maquinaSelecionada.getProduto();
//                ftfProduto.setValue(produto);
//
//                // Modifique essas linhas para:
//                int quantidadeProduzida;
//                int QuantidadeMaterial;
//
//// Para txtQuantidadeProduzida
//                Object quantidadeValue = txtQuantidadeProduzida.getValue();
//                if (quantidadeValue instanceof Integer) {
//                    quantidadeProduzida = (Integer) quantidadeValue;
//                } else if (quantidadeValue instanceof String) {
//                    quantidadeProduzida = Integer.parseInt((String) quantidadeValue);
//                } else {
//                    throw new Exception("Quantidade produzida inválida");
//                }
//
//// Para spQuantidadeMaterial
//                Object materialValue = spQuantidadeMaterial.getValue();
//                if (materialValue instanceof Integer) {
//                    QuantidadeMaterial = (Integer) materialValue;
//                } else if (materialValue instanceof String) {
//                    QuantidadeMaterial = Integer.parseInt((String) materialValue);
//                } else {
//                    throw new Exception("Quantidade de material inválida");
//                }
//                
//                            // Atualizar o estoque dos materiais
//            for (ItemMaterial item : itensMaterial) {
//                Material material = item.getMaterial();
//                material.removerEstoque(item.getQuantidade());
//                materialDAO.atualizar(material);
//            }
//
//                // Configurar a produção
//                producao.setFuncionario(funcionarioSelecionado);
//                producao.setMaquina(maquinaSelecionada);
//                producao.setProduto(produto);
//                producao.setQuantidadeProduzida(quantidadeProduzida);
//                producao.setDataProducao(new Date());
//                producao.setEstado(true);
//                // Definir dias para cura baseado no produto
//                producao.setDiasParaCura(produto.getTempoCura());
//                producao.setProntaParaUso(false); // Inicialmente não está pronta
//                // Atualizar o estoque do produto
//                produto.atualizarEstoque(quantidadeProduzida);
//                produtoDAO.atualizar(produto); // Adicione esta linha para salvar as alterações no produto
//                // Salvar a produção
//                producaoDAO.salvar(producao);
//                JOptionPane.showMessageDialog(this, "Produção registrada com sucesso.");
//                limpaFormulario();
//                carregarGrade();
//            } catch (Exception ex) {
//                JOptionPane.showMessageDialog(this, "Erro ao salvar a produção.\n" + ex.getMessage(),
//                        "Erro", JOptionPane.ERROR_MESSAGE);
//            }
//        }

    }//GEN-LAST:event_btEditarActionPerformed

    private void btnUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUsuarioActionPerformed
        BuscaMaterial BuscaMaterial = new BuscaMaterial(this);
        BuscaMaterial.setVisible(true);
    }//GEN-LAST:event_btnUsuarioActionPerformed

    private void btnUsuario1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUsuario1ActionPerformed
        BuscaFuncionario buscaUsuario = new BuscaFuncionario(this);
        buscaUsuario.setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_btnUsuario1ActionPerformed

    private void btnUsuario2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUsuario2ActionPerformed
        BuscaMaquina BuscaMaquina = new BuscaMaquina(this);
        BuscaMaquina.setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_btnUsuario2ActionPerformed

    private void rbtAlocarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtAlocarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbtAlocarActionPerformed

    private void rbtdesalocarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtdesalocarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbtdesalocarActionPerformed

    private void btAdicionarItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAdicionarItem1ActionPerformed
        if (validarFormularioItens()) {
            try {
                // Pegar o material selecionado e a quantidade
                Material material = (Material) ftfMaterial.getValue();
                double quantidade = Double.parseDouble(spQuantidadeMaterial.getValue().toString());

                // Verificar se há estoque suficiente
                if (material.getQuantidade() < quantidade) {
                    throw new Exception("Quantidade insuficiente em estoque!");
                }

                // Criar novo ItemMaterial
                ItemMaterial item = new ItemMaterial(material, quantidade);

                // Adicionar à lista
                itensMaterial.add(item);

                // Atualizar a tabela
                atualizarTabelaMaterial();

                // Limpar os campos de material
                ftfMaterial.setValue(null);
                spQuantidadeMaterial.setValue(0);

            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this,
                        "Erro ao adicionar material.\n" + ex.getMessage(),
                        "Erro",
                        JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btAdicionarItem1ActionPerformed

    private void btRemoverItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRemoverItem1ActionPerformed
        if (tbItemMaterial.getSelectedRow() != -1) {
            int linha = tbItemMaterial.getSelectedRow();

            // Remover da lista
            itensMaterial.remove(linha);

            // Atualizar a tabela
            atualizarTabelaMaterial();
        } else {
            JOptionPane.showMessageDialog(this,
                    "Selecione um material para remover",
                    "Atenção",
                    JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_btRemoverItem1ActionPerformed

    private void tbItemMaterialMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbItemMaterialMouseClicked

    }//GEN-LAST:event_tbItemMaterialMouseClicked

    private void TbProducaoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TbProducaoMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_TbProducaoMouseClicked
// Método para atualizar a tabela

    private void atualizarTabelaMaterial() {
        // Limpar tabela
        tmItemMaterial.setRowCount(0);

        // Adicionar itens
        for (ItemMaterial item : itensMaterial) {
            tmItemMaterial.addRow(new Object[]{
                item.getCodigo(),
                item.getMaterial().getNome(),
                item.getQuantidade()
            });
        }
    }

    /**
     * Seleciona o registro da tabela e preenche o formulário.
     */
    public void selectRegistryTable() {
        int selectedRow = TbProducao.getSelectedRow();
        if (selectedRow != -1) {
            txtID.setText(TbProducao.getValueAt(selectedRow, 0).toString());
            ftfFuncionario.setText(TbProducao.getValueAt(selectedRow, 1).toString());
            ftfMaquina.setText(TbProducao.getValueAt(selectedRow, 2).toString());
            ftfMaterial.setText(TbProducao.getValueAt(selectedRow, 3).toString());
            ftfProduto.setText(TbProducao.getValueAt(selectedRow, 4).toString());
            spQuantidadeMaterial.setValue(TbProducao.getValueAt(selectedRow, 5).toString());
            txtQuantidadeProduzida.setValue(TbProducao.getValueAt(selectedRow, 6).toString());

            habilitarFormulario(true);
        }
    }

    /**
     * Método para habilitar ou desabilitar o formulário.
     */
    private void habilitarFormulario(boolean ativo) {
        btNovo.setEnabled(!ativo);
        btSalvar.setEnabled(ativo && validarFormulario());
        btCancelar.setEnabled(ativo);
        btExcluir.setEnabled(ativo);
        txtID.setEnabled(ativo);
        ftfFuncionario.setEnabled(ativo);
        ftfMaquina.setEnabled(ativo);
        ftfMaterial.setEnabled(ativo);
        ftfProduto.setEnabled(ativo);
        spQuantidadeMaterial.setEnabled(ativo);
        txtQuantidadeProduzida.setEnabled(ativo);

        btEditar.setEnabled(TbProducao.getSelectedRow() >= 0 && ativo);

        TbProducao.setEnabled(!ativo);

        if (!ativo) {
            limpaFormulario();
        }
    }

    /**
     * Habilita o botão salvar se o formulário for válido.
     */
    private void habilitarSalvar() {
        btSalvar.setEnabled(validarFormulario());
    }

    /**
     * Limpa os campos do formulário.
     */
    private void limpaFormulario() {
        txtID.setText("");
        ftfFuncionario.setText("");
        ftfMaquina.setText("");
        ftfMaterial.setText("");
        ftfProduto.setText("");
        spQuantidadeMaterial.setValue(0);
        txtQuantidadeProduzida.setValue(0);
        txtQuantidadeProduzida.setValue(0);
        estadoGroup.clearSelection(); // Limpa a seleção dos botões de estado
        lblMessagem.setText("");
        itensMaterial.clear();

        // Resetar código
        codigoAtual = 1;
    }

    /**
     * Validação do formulário.
     */
    private boolean validarFormulario() {
        Border borderError = BorderFactory.createLineBorder(Color.RED, 2);
        Border borderNormal = BorderFactory.createLineBorder(Color.GRAY, 1);

        boolean isValid = true;

//        // Validação do campo Quantidade Produzida
//        if (txtQuantidadeProduzida.getText().isEmpty()) {
//            txtQuantidadeProduzida.setBorder(borderError);
//            lblMessagem.setText("Preencha a quantidade produzida.");
//            isValid = false;
//        } else {
//            txtQuantidadeProduzida.setBorder(borderNormal);
//        }
        return isValid;
    }

    // Adicione esses métodos à sua classe de interface
    private void configurarListeners() {
        // Listener para o campo de máquina
        ftfMaquina.addPropertyChangeListener("value", evt -> {
            Maquina maquinaSelecionada = (Maquina) evt.getNewValue();
            if (maquinaSelecionada != null) {
                // Atualiza o produto automaticamente
                ftfProduto.setValue(maquinaSelecionada.getProduto());
            }
        });

        // Listener para o radio button Alocar
        rbtAlocar.addActionListener(e -> {
            if (rbtAlocar.isSelected()) {
                try {
                    Funcionario funcionarioSelecionado = (Funcionario) ftfFuncionario.getValue();
                    Maquina maquinaSelecionada = (Maquina) ftfMaquina.getValue();

                    if (funcionarioSelecionado != null && maquinaSelecionada != null) {
                        if (!maquinaSelecionada.isDisponivel()) {
                            JOptionPane.showMessageDialog(this,
                                    "Máquina já está alocada para outro funcionário",
                                    "Erro",
                                    JOptionPane.ERROR_MESSAGE);

                            rbtAlocar.setSelected(false);
                            return;
                        }

                        // Realizar alocação
                        maquinaSelecionada.alocar(funcionarioSelecionado);
                        funcionarioSelecionado.setMaquinaAlocada(maquinaSelecionada);

                        // Atualizar no banco de dados
                        maquinaDAO.atualizar(maquinaSelecionada);
                        funcionarioDAO.atualizar(funcionarioSelecionado);

                        JOptionPane.showMessageDialog(this,
                                "Máquina " + maquinaSelecionada.getNome()
                                + " alocada ao funcionário " + funcionarioSelecionado.getNome());
                    }
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(this,
                            "Erro ao alocar máquina: " + ex.getMessage(),
                            "Erro",
                            JOptionPane.ERROR_MESSAGE);
                    System.out.println("Erro ao desalocar máquina: " + ex.getMessage() + "Erro");
                    rbtAlocar.setSelected(false);
                }
            }
        });

        // Listener para o radio button Desalocar
        rbtdesalocar.addActionListener(e -> {
            if (rbtdesalocar.isSelected()) {
                try {
                    Funcionario funcionarioSelecionado = (Funcionario) ftfFuncionario.getValue();
                    Maquina maquinaSelecionada = (Maquina) ftfMaquina.getValue();

                    if (funcionarioSelecionado != null && maquinaSelecionada != null) {
                        // Verificar se a máquina está realmente alocada para este funcionário
                        if (funcionarioSelecionado.getMaquinaAlocada() != maquinaSelecionada) {
                            JOptionPane.showMessageDialog(this,
                                    "Esta máquina não está alocada para este funcionário",
                                    "Erro",
                                    JOptionPane.ERROR_MESSAGE);

                            rbtdesalocar.setSelected(false);
                            return;
                        }

                        // Realizar desalocação
                        maquinaSelecionada.desalocar();
                        funcionarioSelecionado.setMaquinaAlocada(null);

                        // Atualizar no banco de dados
                        maquinaDAO.atualizar(maquinaSelecionada);
                        funcionarioDAO.atualizar(funcionarioSelecionado);

                        JOptionPane.showMessageDialog(this,
                                "Máquina " + maquinaSelecionada.getNome()
                                + " desalocada do funcionário " + funcionarioSelecionado.getNome());
                    }
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(this,
                            "Erro ao desalocar máquina: " + ex.getMessage(),
                            "Erro",
                            JOptionPane.ERROR_MESSAGE);
                    System.out.println("Erro ao desalocar máquina: " + ex.getMessage() + "Erro");
                    rbtdesalocar.setSelected(false);
                }
            }
        });
    }
    // Método para inicializar o modelo da tabela

    private void inicializarTabela() {
        tmItemMaterial = new DefaultTableModel();
        tmItemMaterial.addColumn("Código");
        tmItemMaterial.addColumn("Material");
        tmItemMaterial.addColumn("Quantidade");
        tbItemMaterial.setModel(tmItemMaterial);
    }

    private boolean validarFormularioItens() {
        if (ftfMaterial.getValue() == null) {
            JOptionPane.showMessageDialog(this, "Produto inválido.", "Alerta", JOptionPane.WARNING_MESSAGE);
            ftfMaterial.requestFocus();
            return false;
        }
        return true;
    }

private void carregarGrade() {
    LoteProducaoProducaoTableModel tm = (LoteProducaoProducaoTableModel)TbProducao.getModel();
    try {
        tm.setDados(producaoDAO.listarProducoesComAtributos());
    } catch (Exception ex) {
        JOptionPane.showMessageDialog(this, "Erro ao carregar grade.\n" + ex.getMessage(), 
            "Erro", JOptionPane.ERROR_MESSAGE);
    }
}


    void setMaquina(Maquina Maquina) {
        if (Maquina != null) {
            ftfMaquina.setValue(Maquina);
        } else {
            ftfMaquina.setText(""); // Caso o usuário seja nulo, limpar o campo
        }
    }

    void setMaterial(Material Material) {
        if (Material != null) {
            ftfMaterial.setValue(Material);
        } else {
            ftfMaterial.setText(""); // Caso o usuário seja nulo, limpar o campo
        }
    }

    public void setFuncionario(Funcionario funcionario) {
        // Vamos supor que ftfUsuario seja um JTextField ou similar
        if (funcionario != null) {
            ftfFuncionario.setValue(funcionario);
        } else {
            ftfFuncionario.setText(""); // Caso o usuário seja nulo, limpar o campo
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TbProducao;
    private javax.swing.JButton btAdicionarItem1;
    private javax.swing.JButton btCancelar;
    private javax.swing.JButton btEditar;
    private javax.swing.JButton btExcluir;
    private javax.swing.JButton btNovo;
    private javax.swing.JButton btRemoverItem1;
    private javax.swing.JButton btSalvar;
    private javax.swing.JButton btnUsuario;
    private javax.swing.JButton btnUsuario1;
    private javax.swing.JButton btnUsuario2;
    private javax.swing.ButtonGroup estadoGroup;
    private javax.swing.JFormattedTextField ftfFuncionario;
    private javax.swing.JFormattedTextField ftfMaquina;
    private javax.swing.JFormattedTextField ftfMaterial;
    private javax.swing.JFormattedTextField ftfProduto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblMessagem;
    private javax.swing.JRadioButton rbtAlocar;
    private javax.swing.JRadioButton rbtdesalocar;
    private javax.swing.JSpinner spQuantidadeMaterial;
    private javax.swing.JTable tbItemMaterial;
    private javax.swing.JTextField txtID;
    private javax.swing.JSpinner txtQuantidadeProduzida;
    // End of variables declaration//GEN-END:variables

}
